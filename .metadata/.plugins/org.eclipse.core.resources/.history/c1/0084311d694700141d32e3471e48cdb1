/**
 * Imports Scanner functionality.
 */
import java.util.*;

/**
 * This class calculates which Guild Wars 2 Race you are based on your responses.
 * 
 * @see Quiz: Daily MTG, borrowed phrasing and style of some questions <http://www.wizards.com/magic/quiz/quiz.aspx?x=mtg/quiz/guild>
 */
public class GW2RaceQuiz {
	/**
	 * This method initializes the program with a title and passes control flow to question one to begin method chaining.
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		
		//quiz title and instructions
		System.out.println("Which Guild Wars 2 race are you?");
		System.out.println("Please press the return key to continue.");

		//define attribute variables
		int curiosity = 0;
		int empathy = 0;
		int heroism = 0;
		int ingenuity = 0;
		int pragmatism = 0;
		int warring = 0;
		
		//define scanner for following question
		Scanner console = new Scanner(System.in);
		String answer = console.nextLine();

		System.out.println("Please enter the letter of your answer for each of the following questions.");
		System.out.println();
		
		//commence tracking with question one
		questionOne(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);	
	}
		
	/**
	 * This method asks the first question and prompts for the first answer, then passes control flow to question 2.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionOne(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the first question and prompt for the first answer
		System.out.println("1. If you could create your ideal society, what would it be?");
		System.out.println(" A: An isolated niche in nature where all beings are mentally connected and working toward a common purpose, but relatively unaware of what lies beyond their borders.");
		System.out.println(" B: A grand city-state where alliances are won through skirmishes and honor is highly valued.");
		System.out.println(" C: A place of learning where everyone begins on a level playing field, and one’s ascendence through society’s ranks is determined by the cleverness of their inventions.");
		System.out.println(" D: A serene village where creativity is respected, but hard work is also valued, and neighbors are always willing to lend a helping hand.");
		
		//recalculate value of each variable based on the first answer
		if (answer.equalsIgnoreCase("A")) {
			empathy += 2;
			curiosity --;
		} else if (answer.equalsIgnoreCase("B")) {
			heroism ++;
			warring ++;
		} else if (answer.equalsIgnoreCase("C")) {
			ingenuity += 2;
			curiosity ++;
		} else {
			pragmatism +=2;
			empathy ++;
			ingenuity ++;
			warring --;
		}
		
		//passes control flow to question 2
		questionTwo(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);	
	}
	
	/**
	 * This method asks the second question and prompts for the second answer, then passes control flow to question 3.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionTwo(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the second question and prompt for the second answer
		System.out.println("2. What is your opinion on the merits of philosophy in the progress of society?");
		System.out.println(" A: As an intelligent race, it’s the only way for us to move forward.");
		System.out.println(" B: It’s useful to think about, but only if we can apply its principles to real problems.");
		System.out.println(" C: I don’t need philosophy; all you need to know is the good of the many versus the good of the few.");
		System.out.println(" D: Philosophy is only worth considering if it helps me whip my minions into shape.");

		//recalculate value of each variable based on the second answer
		if (answer.equalsIgnoreCase("A")) {
			curiosity ++;
			ingenuity ++;
			pragmatism --;
		} else if (answer.equalsIgnoreCase("B")) {
			pragmatism ++;
		} else if (answer.equalsIgnoreCase("C")) {
			heroism ++;
			empathy --;
		} else {
			warring +=2;
		}
		
		//passes control flow to question 3
		questionThree(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);
	}
	
	/**
	 * This method asks the third question and prompts for the third answer, then passes control flow to question 4.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionThree(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the third question and prompt for the third answer
		System.out.println("3.  ");
		System.out.println(" A: ");
		System.out.println(" B: ");
		System.out.println(" C: ");
		System.out.println(" D: ");

		//recalculate value of each variable based on the third answer
		if (answer.equalsIgnoreCase("A")) {
			curiosity ++;
			ingenuity ++;
			pragmatism --;
		} else if (answer.equalsIgnoreCase("B")) {
			pragmatism ++;
		} else if (answer.equalsIgnoreCase("C")) {
			heroism ++;
			empathy --;
		} else {
			warring +=2;
		}
		
		//passes control flow to question 4
		questionFour(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);
	}
	
	/**
	 * This method asks the fourth question and prompts for the fourth answer, then passes control flow to question 5.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionFour(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the fourth question and prompt for the fourth answer
		System.out.println("4.  ");
		System.out.println(" A: ");
		System.out.println(" B: ");
		System.out.println(" C: ");
		System.out.println(" D: ");

		//recalculate value of each variable based on the fourth answer
		if (answer.equalsIgnoreCase("A")) {
			curiosity ++;
			ingenuity ++;
			pragmatism --;
		} else if (answer.equalsIgnoreCase("B")) {
			pragmatism ++;
		} else if (answer.equalsIgnoreCase("C")) {
			heroism ++;
			empathy --;
		} else {
			warring +=2;
		}
		
		//passes control flow to question 5
		questionFive(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);
	}
	
	/**
	 * This method asks the fifth question and prompts for the fifth answer, then passes control flow to question 6.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionFive(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the fifth question and prompt for the fifth answer
		System.out.println("5.  ");
		System.out.println(" A: ");
		System.out.println(" B: ");
		System.out.println(" C: ");
		System.out.println(" D: ");

		//recalculate value of each variable based on the fifth answer
		if (answer.equalsIgnoreCase("A")) {
			curiosity ++;
			ingenuity ++;
			pragmatism --;
		} else if (answer.equalsIgnoreCase("B")) {
			pragmatism ++;
		} else if (answer.equalsIgnoreCase("C")) {
			heroism ++;
			empathy --;
		} else {
			warring +=2;
		}
		
		//passes control flow to question 6
		questionSix(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);
	}
	
	/**
	 * This method asks the sixth question and prompts for the sixth answer, then passes control flow to question 7.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionSix(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the sixth question and prompt for the sixth answer
		System.out.println("6.  ");
		System.out.println(" A: ");
		System.out.println(" B: ");
		System.out.println(" C: ");
		System.out.println(" D: ");

		//recalculate value of each variable based on the sixth answer
		if (answer.equalsIgnoreCase("A")) {
			curiosity ++;
			ingenuity ++;
			pragmatism --;
		} else if (answer.equalsIgnoreCase("B")) {
			pragmatism ++;
		} else if (answer.equalsIgnoreCase("C")) {
			heroism ++;
			empathy --;
		} else {
			warring +=2;
		}
		
		//passes control flow to question 7
		questionSeven(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);
	}
	
	/**
	 * This method asks the seventh question and prompts for the seventh answer, then passes control flow to question 8.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionSeven(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the seventh question and prompt for the seventh answer
		System.out.println("7.  ");
		System.out.println(" A: ");
		System.out.println(" B: ");
		System.out.println(" C: ");
		System.out.println(" D: ");

		//recalculate value of each variable based on the seventh answer
		if (answer.equalsIgnoreCase("A")) {
			curiosity ++;
			ingenuity ++;
			pragmatism --;
		} else if (answer.equalsIgnoreCase("B")) {
			pragmatism ++;
		} else if (answer.equalsIgnoreCase("C")) {
			heroism ++;
			empathy --;
		} else {
			warring +=2;
		}
		
		//passes control flow to question 8
		questionEight(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);
	}
	
	/**
	 * This method asks the eight question and prompts for the eight answer, then passes control flow to question 9.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionEight(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the eighth question and prompt for the eighth answer
		System.out.println("8.  ");
		System.out.println(" A: ");
		System.out.println(" B: ");
		System.out.println(" C: ");
		System.out.println(" D: ");

		//recalculate value of each variable based on the eighth answer
		if (answer.equalsIgnoreCase("A")) {
			curiosity ++;
			ingenuity ++;
			pragmatism --;
		} else if (answer.equalsIgnoreCase("B")) {
			pragmatism ++;
		} else if (answer.equalsIgnoreCase("C")) {
			heroism ++;
			empathy --;
		} else {
			warring +=2;
		}
		
		//passes control flow to question 9
		questionNine(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);
	}
	
	/**
	 * This method asks the ninth question and prompts for the ninth answer, then passes control flow to question 10.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionNine(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the ninth question and prompt for the ninth answer
		System.out.println("9.  ");
		System.out.println(" A: ");
		System.out.println(" B: ");
		System.out.println(" C: ");
		System.out.println(" D: ");

		//recalculate value of each variable based on the ninth answer
		if (answer.equalsIgnoreCase("A")) {
			curiosity ++;
			ingenuity ++;
			pragmatism --;
		} else if (answer.equalsIgnoreCase("B")) {
			pragmatism ++;
		} else if (answer.equalsIgnoreCase("C")) {
			heroism ++;
			empathy --;
		} else {
			warring +=2;
		}
		
		//passes control flow to question 10
		questionTen(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);
	}
	
	/**
	 * This method asks the tenth question and prompts for the tenth answer, then passes control flow to question 11.
	 * 
	 * @param console  Scanner to ask for a response.
	 * @param answer  The user's response in letter form; ignores case. 
	 * @param curiosity  The tracking variable for the curiosity trait.
	 * @param empathy  The tracking variable for the empathy trait.
	 * @param heroism  The tracking variable for the heroism trait.
	 * @param ingenuity  The tracking variable for the ingenuity trait.
	 * @param pragmatism  The tracking variable for the pragmatism trait.
	 * @param warring The tracking variable for the warring trait.
	 * 
	 * @return void
	 */
	public static void questionTen(Scanner console, String answer, int curiosity, int empathy, int heroism, int ingenuity, int pragmatism, int warring) {
		//ask the tenth question and prompt for the tenth answer
		System.out.println("10.  ");
		System.out.println(" A: ");
		System.out.println(" B: ");
		System.out.println(" C: ");
		System.out.println(" D: ");

		//recalculate value of each variable based on the tenth answer
		if (answer.equalsIgnoreCase("A")) {
			curiosity ++;
			ingenuity ++;
			pragmatism --;
		} else if (answer.equalsIgnoreCase("B")) {
			pragmatism ++;
		} else if (answer.equalsIgnoreCase("C")) {
			heroism ++;
			empathy --;
		} else {
			warring +=2;
		}
		
		//passes control flow to question 11
		questionEleven(console, answer, curiosity, empathy, heroism, ingenuity, pragmatism, warring);
	}
	
	public static void printRace(int curiosity, int empathy, int heroism, int ingenuity, int pragmatism) {
		//TODO if else statements to calculate which race you are
	}

//closes the class
}